<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>„ÇÆ„É£„É´Á≥ª„Éã„ÉÉ„ÇØ„Éç„Éº„É†„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lucide/0.263.1/umd/lucide.min.js"></script>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      background: linear-gradient(135deg, #f9a8d4 0%, #f472b6 50%, #c084fc 100%);
      min-height: 100vh;
      padding: 1rem;
    }
    
    .container {
      max-width: 42rem;
      margin: 0 auto;
    }
    
    .card {
      background: white;
      border-radius: 1.5rem;
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
      padding: 2rem;
      border: 4px solid #fbcfe8;
    }
    
    .header {
      text-center;
      margin-bottom: 1.5rem;
    }
    
    .icons {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 0.5rem;
      margin-bottom: 0.75rem;
    }
    
    .heart-icon {
      color: #ec4899;
      animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }
    
    .title {
      font-size: 2.5rem;
      font-weight: 900;
      background: linear-gradient(to right, #ec4899, #a855f7);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 0.5rem;
    }
    
    .subtitle {
      font-size: 1.5rem;
      font-weight: bold;
      color: #db2777;
      margin-bottom: 0.5rem;
    }
    
    .description {
      color: #4b5563;
      font-weight: 500;
    }
    
    .input-group {
      margin-bottom: 1.5rem;
    }
    
    label {
      display: block;
      font-size: 1.125rem;
      font-weight: bold;
      color: #db2777;
      margin-bottom: 0.75rem;
    }
    
    input {
      width: 100%;
      padding: 1rem 1.25rem;
      border: 4px solid #fbcfe8;
      border-radius: 1rem;
      font-size: 1.125rem;
      font-weight: 500;
      outline: none;
    }
    
    input:focus {
      border-color: #ec4899;
    }
    
    .btn-primary {
      width: 100%;
      background: linear-gradient(to right, #f472b6, #ec4899, #a855f7);
      color: white;
      padding: 1.25rem;
      border-radius: 1rem;
      font-weight: 900;
      font-size: 1.25rem;
      border: none;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.75rem;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
      transition: all 0.3s;
    }
    
    .btn-primary:hover:not(:disabled) {
      transform: scale(1.05);
    }
    
    .btn-primary:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
    
    .section {
      margin-top: 2rem;
    }
    
    .section-title {
      font-size: 1.875rem;
      font-weight: 900;
      text-align: center;
      margin-bottom: 0.75rem;
    }
    
    .grid-2 {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 0.75rem;
    }
    
    .grid-1 {
      display: grid;
      grid-template-columns: 1fr;
      gap: 0.75rem;
    }
    
    .nickname-btn {
      background: linear-gradient(135deg, #fce7f3, #f3e8ff);
      padding: 1rem;
      border-radius: 1rem;
      text-align: center;
      font-weight: bold;
      font-size: 1.125rem;
      border: 3px solid #fbcfe8;
      cursor: pointer;
      transition: all 0.3s;
    }
    
    .nickname-btn:hover {
      transform: scale(1.05);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }
    
    .nickname-btn.selected {
      background: linear-gradient(135deg, #f472b6, #c084fc);
      color: white;
      border-color: #ec4899;
      transform: scale(1.05);
    }
    
    .step-box {
      padding: 1.5rem;
      border-radius: 1.5rem;
      border: 4px solid;
      margin-top: 2rem;
    }
    
    .step-box.purple {
      background: linear-gradient(135deg, #f3e8ff, #fce7f3);
      border-color: #c084fc;
    }
    
    .step-box.orange {
      background: linear-gradient(135deg, #fef3c7, #fed7aa);
      border-color: #fb923c;
    }
    
    .step-box.teal {
      background: linear-gradient(135deg, #ccfbf1, #99f6e4);
      border-color: #14b8a6;
    }
    
    .step-box.cyan {
      background: linear-gradient(135deg, #cffafe, #a5f3fc);
      border-color: #06b6d4;
    }
    
    .type-btn {
      padding: 1.5rem;
      border-radius: 1rem;
      font-weight: 900;
      font-size: 1.25rem;
      color: white;
      border: none;
      cursor: pointer;
      transition: all 0.3s;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }
    
    .type-btn:hover {
      transform: scale(1.05);
    }
    
    .type-btn.blue {
      background: linear-gradient(to right, #60a5fa, #3b82f6);
    }
    
    .type-btn.pink {
      background: linear-gradient(to right, #f472b6, #a855f7);
    }
    
    .type-btn.teal {
      background: linear-gradient(to right, #2dd4bf, #22c55e);
    }
    
    .type-btn.gray {
      background: linear-gradient(to right, #9ca3af, #6b7280);
    }
    
    .type-btn.orange {
      background: linear-gradient(to right, #fb923c, #fbbf24);
    }
    
    .type-btn.cyan {
      background: linear-gradient(to right, #22d3ee, #14b8a6);
    }
    
    .btn-subtitle {
      font-size: 0.875rem;
      font-weight: 500;
      margin-top: 0.5rem;
    }
    
    .name-btn {
      padding: 1rem;
      border-radius: 1rem;
      font-weight: bold;
      font-size: 1.25rem;
      border: 3px solid;
      cursor: pointer;
      transition: all 0.3s;
      background: white;
      color: #1f2937;
    }
    
    .name-btn:hover {
      transform: scale(1.05);
    }
    
    .name-btn.selected {
      background: linear-gradient(to right, #fb923c, #f472b6);
      color: white;
      border: 4px solid #ea580c;
      transform: scale(1.05);
    }
    
    .refresh-btn {
      width: 100%;
      margin-top: 1rem;
      padding: 0.75rem;
      border-radius: 0.75rem;
      font-weight: bold;
      color: white;
      border: none;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      transition: all 0.3s;
    }
    
    .refresh-btn:hover {
      transform: scale(1.05);
    }
    
    .final-box {
      margin-top: 2rem;
      background: linear-gradient(135deg, #fbcfe8, #e9d5ff);
      padding: 2rem;
      border-radius: 1.5rem;
      border: 4px solid #f472b6;
      text-align: center;
    }
    
    .final-title {
      font-size: 1.5rem;
      font-weight: 900;
      color: #a855f7;
      margin-bottom: 1rem;
    }
    
    .final-name-box {
      background: white;
      padding: 1.5rem;
      border-radius: 1rem;
      border: 4px solid #a855f7;
      margin-bottom: 1rem;
    }
    
    .final-name {
      font-size: 3rem;
      font-weight: 900;
      background: linear-gradient(to right, #ec4899, #a855f7);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    
    .emojis {
      display: flex;
      justify-content: center;
      gap: 0.5rem;
      font-size: 2rem;
    }
    
    .hidden {
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="card">
      <div class="header">
        <div class="icons">
          <svg class="heart-icon" width="40" height="40" fill="currentColor" viewBox="0 0 24 24"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
          <svg width="48" height="48" fill="none" stroke="#ec4899" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 24 24"><path d="m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z"></path></svg>
          <svg class="heart-icon" width="40" height="40" fill="currentColor" viewBox="0 0 24 24"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
        </div>
        <h1 class="title">„ÇÆ„É£„É´Á≥ª„Éã„ÉÉ„ÇØ„Éç„Éº„É†</h1>
        <h2 class="subtitle">‚ô°„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº‚ô°</h2>
        <p class="description">ÂêçÂâç„ÇíÂÖ•„Çå„Å¶Ë∂Ö„Ç´„ÉØ„Å™„Éã„ÉÉ„ÇØ„Éç„Éº„É†‰Ωú„Å£„Å°„ÇÉ„Åä„Äúüíï</p>
      </div>

      <div class="input-group">
        <label>‚ú® ÂêçÂâç„ÇíÂÖ•„Çå„Å¶„Å≠ ‚ú®</label>
        <input type="text" id="nameInput" placeholder="‰æã: „ÅØ„Çã„Åã„ÄÅ„Åø„Åè„ÄÅ„ÅÇ„ÅÑ„Çä">
      </div>

      <button class="btn-primary" id="generateBtn">
        <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8"></path><path d="M21 3v5h-5"></path></svg>
        „ÇÆ„É£„É´Á≥ª„Éã„ÉÉ„ÇØ„Éç„Éº„É†‰Ωú„Çã‚ô°
        <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z"></path></svg>
      </button>

      <div id="nicknameSection" class="section hidden">
        <h2 class="section-title" style="color: #db2777;">STEP 1Ô∏è‚É£ „Éã„ÉÉ„ÇØ„Éç„Éº„É†„ÇíÈÅ∏„Çì„Åß„Å≠üíï</h2>
        <div id="nicknameGrid" class="grid-2"></div>
      </div>

      <div id="lastNameTypeSection" class="step-box purple hidden">
        <h2 class="section-title" style="color: #a855f7;">STEP 2Ô∏è‚É£ „Å©„Çì„Å™ËãóÂ≠ó„Åå„ÅÑ„ÅÑÔºü‚ú®</h2>
        <div class="grid-2">
          <button class="type-btn blue" onclick="generateLastNames('normal')">
            üèØ ÊôÆÈÄö„ÅÆËãóÂ≠ó
            <div class="btn-subtitle">‰ΩêËó§„ÄÅÁî∞‰∏≠„Å™„Å©</div>
          </button>
          <button class="type-btn pink" onclick="generateLastNames('gyaru')">
            ‚ú® „ÇÆ„É£„É´Á≥ªËãóÂ≠ó
            <div class="btn-subtitle">Âß´Â∑ù„ÄÅÊòüÈáé„Å™„Å©</div>
          </button>
        </div>
      </div>

      <div id="lastNameSection" class="step-box orange hidden">
        <h2 class="section-title" style="color: #ea580c;">STEP 3Ô∏è‚É£ ËãóÂ≠ó„ÇíÈÅ∏„Çì„Åß„Å≠üí´</h2>
        <div id="lastNameGrid" class="grid-1"></div>
        <button class="refresh-btn type-btn orange" onclick="refreshLastNames()">
          <svg width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8"></path><path d="M21 3v5h-5"></path></svg>
          ‰ªñ„ÅÆËãóÂ≠ó„ÇíË¶ã„Çã
        </button>
      </div>

      <div id="middleNameTypeSection" class="step-box teal hidden">
        <h2 class="section-title" style="color: #14b8a6;">STEP 4Ô∏è‚É£ „Éü„Éâ„É´„Éç„Éº„É†„Å§„Åë„ÇãÔºüüåü</h2>
        <div class="grid-2">
          <button class="type-btn teal" onclick="generateMiddleNames()">‚ú® „Å§„Åë„ÇãÔºÅ</button>
          <button class="type-btn gray" onclick="skipMiddleName()">üí≠ „ÅÑ„Çâ„Å™„ÅÑ</button>
        </div>
      </div>

      <div id="middleNameSection" class="step-box cyan hidden">
        <h2 class="section-title" style="color: #0891b2;">„Éü„Éâ„É´„Éç„Éº„É†„ÇíÈÅ∏„Çì„Åß„Å≠üåà</h2>
        <div id="middleNameGrid" class="grid-1"></div>
        <button class="refresh-btn type-btn cyan" onclick="generateMiddleNames()">
          <svg width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8"></path><path d="M21 3v5h-5"></path></svg>
          ‰ªñ„ÅÆ„Éü„Éâ„É´„Éç„Éº„É†„ÇíË¶ã„Çã
        </button>
      </div>

      <div id="finalSection" class="final-box hidden">
        <h2 class="final-title">üéâ ÂÆåÊàêÔºÅ„ÅÇ„Å™„Åü„ÅÆÊñ∞„Åó„ÅÑÂêçÂâç üéâ</h2>
        <div class="final-name-box">
          <div id="finalName" class="final-name"></div>
        </div>
        <div class="emojis">üíï ‚ú® üå∏ üíñ ‚≠ê üíï</div>
      </div>

      <div style="margin-top: 1.5rem;" class="emojis">üíï ‚ú® üå∏ üíñ ‚≠ê üíï</div>
    </div>
  </div>

  <script>
    const state = {
      name: '',
      nicknames: [],
      selectedNickname: '',
      lastNameType: '',
      lastNames: [],
      selectedLastName: '',
      wantsMiddleName: false,
      middleNames: [],
      selectedMiddleName: ''
    };

    const nameInput = document.getElementById('nameInput');
    const generateBtn = document.getElementById('generateBtn');

    nameInput.addEventListener('input', (e) => {
      state.name = e.target.value;
      generateBtn.disabled = !state.name.trim();
    });

    nameInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') generateGyaruNicknames();
    });

    generateBtn.addEventListener('click', generateGyaruNicknames);

    function generateGyaruNicknames() {
      if (!state.name.trim()) return;

      const nameChars = state.name.trim();
      const generated = [];

      const smallChars = {
        '„ÅÇ': '„ÅÅ', '„ÅÑ': '„ÅÉ', '„ÅÜ': '„ÅÖ', '„Åà': '„Åá', '„Åä': '„Åâ',
        '„ÇÑ': '„ÇÉ', '„ÇÜ': '„ÇÖ', '„Çà': '„Çá', '„Å§': '„Å£',
        '„Ç¢': '„Ç°', '„Ç§': '„Ç£', '„Ç¶': '„Ç•', '„Ç®': '„Çß', '„Ç™': '„Ç©',
        '„É§': '„É£', '„É¶': '„É•', '„É®': '„Éß', '„ÉÑ': '„ÉÉ'
      };

      const katakanaMap = {
        '„ÅÇ': '„Ç¢', '„ÅÑ': '„Ç§', '„ÅÜ': '„Ç¶', '„Åà': '„Ç®', '„Åä': '„Ç™',
        '„Åã': '„Ç´', '„Åç': '„Ç≠', '„Åè': '„ÇØ', '„Åë': '„Ç±', '„Åì': '„Ç≥',
        '„Åå': '„Ç¨', '„Åé': '„ÇÆ', '„Åê': '„Ç∞', '„Åí': '„Ç≤', '„Åî': '„Ç¥',
        '„Åï': '„Çµ', '„Åó': '„Ç∑', '„Åô': '„Çπ', '„Åõ': '„Çª', '„Åù': '„ÇΩ',
        '„Åñ': '„Ç∂', '„Åò': '„Ç∏', '„Åö': '„Ç∫', '„Åú': '„Çº', '„Åû': '„Çæ',
        '„Åü': '„Çø', '„Å°': '„ÉÅ', '„Å§': '„ÉÑ', '„Å¶': '„ÉÜ', '„Å®': '„Éà',
        '„Å†': '„ÉÄ', '„Å¢': '„ÉÇ', '„Å•': '„ÉÖ', '„Åß': '„Éá', '„Å©': '„Éâ',
        '„Å™': '„Éä', '„Å´': '„Éã', '„Å¨': '„Éå', '„Å≠': '„Éç', '„ÅÆ': '„Éé',
        '„ÅØ': '„Éè', '„Å≤': '„Éí', '„Åµ': '„Éï', '„Å∏': '„Éò', '„Åª': '„Éõ',
        '„Å∞': '„Éê', '„Å≥': '„Éì', '„Å∂': '„Éñ', '„Åπ': '„Éô', '„Åº': '„Éú',
        '„Å±': '„Éë', '„Å¥': '„Éî', '„Å∑': '„Éó', '„Å∫': '„Éö', '„ÅΩ': '„Éù',
        '„Åæ': '„Éû', '„Åø': '„Éü', '„ÇÄ': '„É†', '„ÇÅ': '„É°', '„ÇÇ': '„É¢',
        '„ÇÑ': '„É§', '„ÇÜ': '„É¶', '„Çà': '„É®',
        '„Çâ': '„É©', '„Çä': '„É™', '„Çã': '„É´', '„Çå': '„É¨', '„Çç': '„É≠',
        '„Çè': '„ÉØ', '„Çí': '„É≤', '„Çì': '„É≥'
      };

      let katakana = '';
      for (let char of nameChars) {
        katakana += katakanaMap[char] || char;
      }

      if (nameChars.length >= 2) {
        const first2 = nameChars.substring(0, 2);
        const first2Kata = katakana.substring(0, 2);
        
        let small = '';
        for (let char of first2) {
          small += smallChars[char] || char;
        }
        
        generated.push(first2Kata + '„Å¥', first2Kata + '„Å¥„Çá„Çì', first2Kata + '„Åü„Çì', 
                      first2Kata + '„ÉÜ„Ç£„Çì', first2Kata + '„Çä„Çì', first2Kata + '„Å°„Çá',
                      first2Kata + '„ÅΩ„Çà', first2Kata + '„Åø„Çì', first2Kata + '„Å´„ÇÉ„Çì',
                      first2Kata + '„Å¥„Å¥', small + '„Å¥', small + '„Åü„Çì', small + '„Å°„Çá',
                      first2 + '„Å¥', first2 + '„ÉÜ„Ç£„Çì', first2 + '„ÅΩ„Çà');
        
        const lastChar = first2Kata[first2Kata.length - 1];
        generated.push(first2Kata + lastChar);
      }

      if (nameChars.length > 0) {
        const first1Kata = katakana[0];
        generated.push(first1Kata + '„Å¥', first1Kata + '„Åü„Çì', first1Kata + '„ÉÜ„Ç£„Çì',
                      first1Kata + '„Å°„ÇÉ„Çì', first1Kata + '„ÅΩ„Çà', first1Kata + '„Å°„Çá');
      }

      if (katakana.length >= 3) {
        const lastChar = katakana[katakana.length - 1];
        generated.push(katakana + lastChar);
      }
      
      if (katakana.length === 2) {
        const lastChar = katakana[1];
        generated.push(katakana + lastChar);
      }

      if (katakana.length >= 2) {
        generated.push(katakana.substring(0, 2) + '„Éº', katakana.substring(0, 2) + '„Éº„ÉÜ„Ç£„Çì');
      }

      if (katakana !== nameChars && katakana.length <= 4) {
        generated.push(katakana, katakana + '„Å¥', katakana + '„Åü„Çì');
      }

      let allSmall = '';
      for (let char of nameChars) {
        allSmall += smallChars[char] || char;
      }
      if (allSmall !== nameChars && allSmall.length <= 4) {
        generated.push(allSmall);
      }

      if (katakana.length >= 2) {
        const base = katakana.substring(0, 2);
        generated.push(base + '‚ô°', base + '„Å¥‚ô°', base + '„ÉÜ„Ç£„Çì‚ô°');
      }

      const romajiMap = {
        '„ÅÇ': 'a', '„ÅÑ': 'i', '„ÅÜ': 'u', '„Åà': 'e', '„Åä': 'o',
        '„Åã': 'ka', '„Åç': 'ki', '„Åè': 'ku', '„Åë': 'ke', '„Åì': 'ko',
        '„Åï': 'sa', '„Åó': 'shi', '„Åô': 'su', '„Åõ': 'se', '„Åù': 'so',
        '„Åü': 'ta', '„Å°': 'chi', '„Å§': 'tsu', '„Å¶': 'te', '„Å®': 'to',
        '„Å™': 'na', '„Å´': 'ni', '„Å¨': 'nu', '„Å≠': 'ne', '„ÅÆ': 'no',
        '„ÅØ': 'ha', '„Å≤': 'hi', '„Åµ': 'fu', '„Å∏': 'he', '„Åª': 'ho',
        '„Åæ': 'ma', '„Åø': 'mi', '„ÇÄ': 'mu', '„ÇÅ': 'me', '„ÇÇ': 'mo',
        '„ÇÑ': 'ya', '„ÇÜ': 'yu', '„Çà': 'yo',
        '„Çâ': 'ra', '„Çä': 'ri', '„Çã': 'ru', '„Çå': 're', '„Çç': 'ro',
        '„Çè': 'wa', '„Çí': 'wo', '„Çì': 'n',
        '„Ç¢': 'a', '„Ç§': 'i', '„Ç¶': 'u', '„Ç®': 'e', '„Ç™': 'o',
        '„Ç´': 'ka', '„Ç≠': 'ki', '„ÇØ': 'ku', '„Ç±': 'ke', '„Ç≥': 'ko',
        '„Çµ': 'sa', '„Ç∑': 'shi', '„Çπ': 'su', '„Çª': 'se', '„ÇΩ': 'so',
        '„Çø': 'ta', '„ÉÅ': 'chi', '„ÉÑ': 'tsu', '„ÉÜ': 'te', '„Éà': 'to',
        '„Éä': 'na', '„Éã': 'ni', '„Éå': 'nu', '„Éç': 'ne', '„Éé': 'no',
        '„Éè': 'ha', '„Éí': 'hi', '„Éï': 'fu', '„Éò': 'he', '„Éõ': 'ho',
        '„Éû': 'ma', '„Éü': 'mi', '„É†': 'mu', '„É°': 'me', '„É¢': 'mo',
        '„É§': 'ya', '„É¶': 'yu', '„É®': 'yo',
        '„É©': 'ra', '„É™': 'ri', '„É´': 'ru', '„É¨': 're', '„É≠': 'ro',
        '„ÉØ': 'wa', '„É≤': 'wo', '„É≥': 'n'
      };
      
      let romaji = '';
      for (let char of nameChars) {
        romaji += romajiMap[char] || char;
      }
      if (romaji && romaji !== nameChars && romaji.length <= 6) {
        generated.push(romaji + 'pi', romaji + 'tan');
        if (romaji.length >= 2) {
          generated.push(romaji.substring(0, 2) + 'pi');
        }
      }

      const normalizeForComparison = (str) => {
        let normalized = '';
        for (let char of str) {
          normalized += katakanaMap[char] || char;
        }
        return normalize